{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Fiw\\\\Desktop\\\\next-nodejs-auth\\\\frontend\\\\pages\\\\showStudents.js\";\nimport Head from 'next/head';\nimport Layout from '../components/layout';\nimport Navbar from '../components/navbar';\nimport { useEffect, useState } from 'react';\nimport styles from '../styles/std.module.css';\nimport axios from 'axios';\nimport stdAuth from '../components/stdAuth';\nimport config from '../config/config';\nconst URL = `${config.URL}/students`;\n\nconst showStudents = ({\n  token\n}) => {\n  // const [students, setStudents] = useState( {\n  //     list:\n  //         [\n  //             { id: \"001\", name: 'test', surname: 'kup', major: \"CoE\", GPA: 2.3 },\n  //         ]\n  // })\n  useEffect(() => {\n    getStudents();\n  }, []);\n\n  const getStudents = async () => {\n    let student = await axios.get(URL);\n    setStudents(student.data);\n  };\n\n  const printStudents = () => {\n    console.log('Students:', students);\n    if (students.list && students.list.length) return students.list.map((student, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n      className: styles.listItem,\n      children: [\"Name : \", student ? student.name : '-', \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 56\n      }, this), \"Surname : \", student ? student.surname : '-', \"  \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 63\n      }, this), \"Major : \", student ? student.major : '-', \"  \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 59\n      }, this), \"GPA : \", student ? student.GPA : '-', \"  \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 55\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 14\n    }, this));else {\n      return /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"No students\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 21\n      }, this);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"Students\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.container,\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), JSON.stringify(students.students), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: styles.list,\n        children: printStudents()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n};\n\nexport default stdAuth(showStudents);\nexport function getServerSideProps({\n  req,\n  res\n}) {\n  return {\n    props: {\n      token: req.cookies.token || \"\"\n    }\n  };\n}","map":{"version":3,"sources":["C:/Users/Fiw/Desktop/next-nodejs-auth/frontend/pages/showStudents.js"],"names":["Head","Layout","Navbar","useEffect","useState","styles","axios","stdAuth","config","URL","showStudents","token","getStudents","student","get","setStudents","data","printStudents","console","log","students","list","length","map","index","listItem","name","surname","major","GPA","container","JSON","stringify","getServerSideProps","req","res","props","cookies"],"mappings":";;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AAGA,MAAMC,GAAG,GAAI,GAAED,MAAM,CAACC,GAAI,WAA1B;;AACA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAe;AAEhC;AACA;AACA;AACA;AACA;AACA;AAEAR,EAAAA,SAAS,CAAC,MAAM;AACZS,IAAAA,WAAW;AACd,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMA,WAAW,GAAG,YAAY;AAC5B,QAAIC,OAAO,GAAG,MAAMP,KAAK,CAACQ,GAAN,CAAUL,GAAV,CAApB;AACAM,IAAAA,WAAW,CAACF,OAAO,CAACG,IAAT,CAAX;AACH,GAHD;;AAIA,QAAMC,aAAa,GAAG,MAAM;AACxBC,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBC,QAAzB;AACA,QAAIA,QAAQ,CAACC,IAAT,IAAiBD,QAAQ,CAACC,IAAT,CAAcC,MAAnC,EACI,OAAQF,QAAQ,CAACC,IAAT,CAAcE,GAAd,CAAkB,CAACV,OAAD,EAAUW,KAAV,kBACzB;AAAgB,MAAA,SAAS,EAAEnB,MAAM,CAACoB,QAAlC;AAAA,4BACWZ,OAAD,GAAYA,OAAO,CAACa,IAApB,GAA2B,GADrC,oBAC0C;AAAA;AAAA;AAAA;AAAA,cAD1C,gBAEcb,OAAD,GAAYA,OAAO,CAACc,OAApB,GAA8B,GAF3C,qBAEiD;AAAA;AAAA;AAAA;AAAA,cAFjD,cAGYd,OAAD,GAAYA,OAAO,CAACe,KAApB,GAA4B,GAHvC,qBAG6C;AAAA;AAAA;AAAA;AAAA,cAH7C,YAIUf,OAAD,GAAYA,OAAO,CAACgB,GAApB,GAA0B,GAJnC,qBAIyC;AAAA;AAAA;AAAA;AAAA,cAJzC;AAAA,OAASL,KAAT;AAAA;AAAA;AAAA;AAAA,YADO,CAAR,CADJ,KASK;AACD,0BAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAR;AACH;AACF,GAdH;;AAeA,sBACI,QAAC,MAAD;AAAA,4BACI,QAAC,IAAD;AAAA,6BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,eAII;AAAK,MAAA,SAAS,EAAEnB,MAAM,CAACyB,SAAvB;AAAA,8BACI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cADJ,EAEKC,IAAI,CAACC,SAAL,CAAeZ,QAAQ,CAACA,QAAxB,CAFL,eAGI;AAAI,QAAA,SAAS,EAAEf,MAAM,CAACgB,IAAtB;AAAA,kBACKJ,aAAa;AADlB;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAeH,CA/CD;;AAiDA,eAAeV,OAAO,CAACG,YAAD,CAAtB;AAEA,OAAO,SAASuB,kBAAT,CAA4B;AAAEC,EAAAA,GAAF;AAAOC,EAAAA;AAAP,CAA5B,EAA0C;AAC7C,SAAO;AAAEC,IAAAA,KAAK,EAAE;AAAEzB,MAAAA,KAAK,EAAEuB,GAAG,CAACG,OAAJ,CAAY1B,KAAZ,IAAqB;AAA9B;AAAT,GAAP;AACH","sourcesContent":["import Head from 'next/head'\r\nimport Layout from '../components/layout'\r\nimport Navbar from '../components/navbar'\r\nimport { useEffect, useState } from 'react'\r\nimport styles from '../styles/std.module.css'\r\nimport axios from 'axios'\r\nimport stdAuth from '../components/stdAuth'\r\nimport config from '../config/config'\r\n\r\n\r\nconst URL = `${config.URL}/students`\r\nconst showStudents = ({ token }) => {\r\n\r\n    // const [students, setStudents] = useState( {\r\n    //     list:\r\n    //         [\r\n    //             { id: \"001\", name: 'test', surname: 'kup', major: \"CoE\", GPA: 2.3 },\r\n    //         ]\r\n    // })\r\n\r\n    useEffect(() => {\r\n        getStudents()\r\n    }, [])\r\n\r\n    const getStudents = async () => {\r\n        let student = await axios.get(URL)\r\n        setStudents(student.data)\r\n    }\r\n    const printStudents = () => {\r\n        console.log('Students:', students)\r\n        if (students.list && students.list.length)\r\n            return (students.list.map((student, index) =>\r\n            (<li key={index} className={styles.listItem}>\r\n               Name : {(student) ? student.name : '-'} <br></br>\r\n               Surname : {(student) ? student.surname : '-'}  <br></br>\r\n               Major : {(student) ? student.major : '-'}  <br></br>\r\n               GPA : {(student) ? student.GPA : '-'}  <br></br> \r\n            </li>)\r\n            ))\r\n        else {\r\n            return (<h2>No students</h2>)\r\n        }\r\n      }\r\n    return (\r\n        <Layout>\r\n            <Head>\r\n                <title>Students</title>\r\n            </Head>\r\n            <div className={styles.container}>\r\n                <Navbar />\r\n                {JSON.stringify(students.students)}\r\n                <ul className={styles.list}>\r\n                    {printStudents()}\r\n                </ul>\r\n                \r\n            </div>\r\n        </Layout>\r\n    )\r\n}\r\n\r\nexport default stdAuth(showStudents)\r\n\r\nexport function getServerSideProps({ req, res }) {\r\n    return { props: { token: req.cookies.token || \"\" } };\r\n}"]},"metadata":{},"sourceType":"module"}